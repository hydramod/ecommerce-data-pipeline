name: CI
on:
  push:
  pull_request:

jobs:
  unit-matrix:
    name: "Unit â€¢ ${{ matrix.service }}"
    runs-on: ubuntu-latest

    strategy:
      fail-fast: false
      matrix:
        service: [auth, cart, catalog, notifications, order, payment, shipping]
        include:
          - service: auth
            db_required: true
          - service: cart
            db_required: false
          - service: catalog
            db_required: true
          - service: notifications
            db_required: false
          - service: order
            db_required: true
          - service: payment
            db_required: true
          - service: shipping
            db_required: true

    # Lightweight infra for tests
    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: testdb
        options: >-
          --health-cmd "pg_isready -U postgres"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports: ["5432:5432"]
      redis:
        image: redis:7-alpine
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports: ["6379:6379"]

    defaults:
      run:
        shell: bash
        working-directory: services/${{ matrix.service }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python 3.11
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"
          cache: pip
          cache-dependency-path: services/${{ matrix.service }}/pyproject.toml

      - name: Install dependencies
        run: |
          python -m pip install -U pip
          pip install -e ".[test]" || pip install -e .

      - name: Prepare env
        run: |
          if [ "${{ matrix.db_required }}" = "true" ]; then
            echo "POSTGRES_DSN=postgresql+psycopg://postgres:postgres@localhost:5432/testdb" >> $GITHUB_ENV
            echo "POSTGRES_USER=postgres" >> $GITHUB_ENV
            echo "POSTGRES_PASSWORD=postgres" >> $GITHUB_ENV
            echo "POSTGRES_DB=testdb" >> $GITHUB_ENV
          fi

          # Shared basics
          echo "REDIS_URL=redis://localhost:6379/0" >> $GITHUB_ENV
          echo "JWT_SECRET=test-secret-key-for-ci" >> $GITHUB_ENV
          echo "JWT_ALGORITHM=HS256" >> $GITHUB_ENV
          echo "SVC_INTERNAL_KEY=ci-test-key" >> $GITHUB_ENV

          # Harmless defaults referenced by some services
          echo "KAFKA_BOOTSTRAP=localhost:9092" >> $GITHUB_ENV
          echo "S3_ENDPOINT=http://localhost:9000" >> $GITHUB_ENV
          echo "S3_ACCESS_KEY=dummy" >> $GITHUB_ENV
          echo "S3_SECRET_KEY=dummy" >> $GITHUB_ENV
          echo "S3_BUCKET=media" >> $GITHUB_ENV
          echo "S3_SECURE=false" >> $GITHUB_ENV
          echo "CATALOG_BASE=http://localhost:9999" >> $GITHUB_ENV

          # SMTP defaults for notifications (not used by health but safe)
          echo "SMTP_HOST=localhost" >> $GITHUB_ENV
          echo "SMTP_PORT=1025" >> $GITHUB_ENV
          echo "FROM_EMAIL=no-reply@example.local" >> $GITHUB_ENV

      - name: Run DB migrations (best-effort)
        if: matrix.db_required == 'true'
        run: |
          if [ -f "alembic.ini" ]; then
            python -m pip install alembic
            alembic upgrade head || echo "Migrations failed (tolerated for unit tests)"
          fi

      - name: Pytest
        run: pytest -v --tb=short -x

      - name: Upload artifacts
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: junit-${{ matrix.service }}
          path: _artifacts/${{ matrix.service }}/
          if-no-files-found: ignore
